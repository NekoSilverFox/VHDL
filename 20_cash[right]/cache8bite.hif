HIF003
--
-- Copyright (C) 1988-1998 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	74374.gdf
	{
		74374 [] []
		{
			24 [] [];
		}
	}
	eq8bit.gdf
	{
		eq8bit [] []
		{
			25 [] [];
		}
	}
	tag8bit.gdf
	{
		tag8bit [] []
		{
			19 [] [];
		}
	}
	7493.gdf
	{
		7493 [] []
		{
			18 [] [];
		}
	}
	74138.gdf
	{
		74138 [] []
		{
			17 [] [];
		}
	}
	rs.gdf
	{
		rs [] []
		{
			16 [] [];
		}
	}
	declut.tdf
	{
		declut [LATENCY,TOT_LEVELS,STAGE,width,USE_LPM_FOR_AHDL_OPERATORS] [declut.inc,bypassff.inc]
		{
			12 [LATENCY=0,TOT_LEVELS=1,STAGE=0,width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq7,eq6,eq5,eq4,eq3,eq2,eq1,eq0,data2,data1,data0,enable];
		}
	}
	lpm_decode.tdf
	{
		lpm_decode [DEVICE_FAMILY,CASCADE_CHAIN,LPM_PIPELINE=0,LPM_DECODES,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [declut.inc,altshift.inc,lpm_compare.inc,lpm_constant.inc,aglobal.inc]
		{
			10 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN=IGNORE,LPM_PIPELINE=0,LPM_DECODES=16,LPM_WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq15,eq14,eq13,eq12,eq11,eq10,eq9,eq8,eq7,eq6,eq5,eq4,eq3,eq2,eq1,eq0,data3,data2,data1,data0];
		}
	}
	f8count.gdf
	{
		f8count [] []
		{
			9 [] [];
		}
	}
	muxlut.tdf
	{
		muxlut [CASCADE_CHAIN,LOCAL=0,REM_LATENCY,LATENCY,TOT_LEVELS,LEVEL,SIZE,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,altshift.inc]
		{
			7 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=1,LEVEL=0,SIZE=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,select0];
		}
	}
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			11 [DEPTH=0,WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data15,data14,data13,data12,data11,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			6 [DEPTH=0,WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data7,data6,data5,data4,data3,data2,data1,data0];
		}
	}
	lpm_mux.tdf
	{
		lpm_mux [LPM_PIPELINE=0,LPM_WIDTHS,LPM_SIZE,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,bypassff.inc,altshift.inc]
		{
			15 [LPM_PIPELINE=0,LPM_WIDTHS=1,LPM_SIZE=2,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result15,result14,result13,result12,result11,result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data1_15,data1_14,data1_13,data1_12,data1_11,data1_10,data1_9,data1_8,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_15,data0_14,data0_13,data0_12,data0_11,data0_10,data0_9,data0_8,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel0];
			5 [LPM_PIPELINE=0,LPM_WIDTHS=1,LPM_SIZE=2,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel0];
		}
	}
	lpm_counter.tdf
	{
		lpm_counter [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=OFF,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY,LPM_SVALUE=0,LPM_AVALUE=0,LPM_MODULUS=0,LPM_DIRECTION=DEFAULT,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_constant.inc,lpm_decode.inc,lpm_add_sub.inc,cmpconst.inc,lpm_compare.inc,lpm_counter.inc,dffeea.inc,aglobal.inc]
		{
			22 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=MAX9000,LPM_SVALUE=0,LPM_AVALUE=0,LPM_MODULUS=0,LPM_DIRECTION=DEFAULT,LPM_WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q0,sclr,clock,cnt_en];
			21 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=0,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=MAX9000,LPM_SVALUE=0,LPM_AVALUE=0,LPM_MODULUS=0,LPM_DIRECTION=DEFAULT,LPM_WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q0,aclr,clock,cnt_en];
			13 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=0,LPM_AVALUE=0,LPM_MODULUS=0,LPM_DIRECTION=DEFAULT,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq0,eq1,eq2,eq3,eq4,eq5,eq6,eq7,eq8,eq9,eq10,eq11,eq12,eq13,eq14,eq15,clock];
			8 [LABWIDE_SCLR=ON,CARRY_CNT_EN=SMART,NOT_GATE_PUSH_BACK=ON,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,DEVICE_FAMILY=FLEX10K,LPM_SVALUE=0,LPM_AVALUE=0,LPM_MODULUS=0,LPM_DIRECTION=DEFAULT,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq0,eq1,eq2,eq3,eq4,eq5,eq6,eq7,clock];
		}
	}
	busmux.tdf
	{
		busmux [WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_mux.inc]
		{
			14 [WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,dataa9,dataa10,dataa11,dataa12,dataa13,dataa14,dataa15,sel,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,datab9,datab10,datab11,datab12,datab13,datab14,datab15,result0,result1,result2,result3,result4,result5,result6,result7];
			4 [WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,sel,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,result0,result1,result2,result3,result4,result5,result6,result7];
		}
	}
	eq3bit.gdf
	{
		eq3bit [] []
		{
			3 [] [];
		}
	}
	tag3bit.gdf
	{
		tag3bit [] []
		{
			2 [] [];
		}
	}
	74374b.gdf
	{
		74374b [] []
		{
			1 [] [];
		}
	}
	rst.vhd
	{
		rst [] [U1147235.DLS,U7449008.DLS]
		{
			23 [] [];
		}
	}
	cfc.vhd
	{
		cfc [] [U7449008.DLS,U1147235.DLS]
		{
			20 [] [];
		}
	}
	checkhit2.vhd
	{
		checkhit2 [] [U1147235.DLS,U7449008.DLS]
		{
			26 [] [];
		}
	}
	cache8bite.gdf
	{
		cache8bite [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	cache8bite::(0,0):(0): cache8bite.gdf
	{
		eq8bit::(0,0):(308): eq8bit.gdf;
		eq8bit::(0,0):(306): eq8bit.gdf;
		eq8bit::(0,0):(305): eq8bit.gdf;
		eq8bit::(0,0):(304): eq8bit.gdf;
		eq8bit::(0,0):(303): eq8bit.gdf;
		eq8bit::(0,0):(302): eq8bit.gdf;
		eq8bit::(0,0):(300): eq8bit.gdf;
		eq8bit::(0,0):(299): eq8bit.gdf;
		tag8bit::(0,0):(298): tag8bit.gdf
		{
			74374:24:(0,0):(1): 74374.gdf;
		}
		tag8bit::(0,0):(297): tag8bit.gdf
		{
			74374:24:(0,0):(1): 74374.gdf;
		}
		tag8bit::(0,0):(296): tag8bit.gdf
		{
			74374:24:(0,0):(1): 74374.gdf;
		}
		tag8bit::(0,0):(294): tag8bit.gdf
		{
			74374:24:(0,0):(1): 74374.gdf;
		}
		tag8bit::(0,0):(293): tag8bit.gdf
		{
			74374:24:(0,0):(1): 74374.gdf;
		}
		tag8bit::(0,0):(292): tag8bit.gdf
		{
			74374:24:(0,0):(1): 74374.gdf;
		}
		tag8bit::(0,0):(291): tag8bit.gdf
		{
			74374:24:(0,0):(1): 74374.gdf;
		}
		tag8bit::(0,0):(290): tag8bit.gdf
		{
			74374:24:(0,0):(1): 74374.gdf;
		}
		74374b::(0,0):(11): 74374b.gdf;
		74374b::(0,0):(10): 74374b.gdf;
		74374b::(0,0):(9): 74374b.gdf;
		74374b::(0,0):(8): 74374b.gdf;
		74374b::(0,0):(7): 74374b.gdf;
		74374b::(0,0):(6): 74374b.gdf;
		74374b::(0,0):(5): 74374b.gdf;
		74374b::(0,0):(4): 74374b.gdf;
		7493::(0,0):(321): 7493.gdf;
		74138::(0,0):(323): 74138.gdf;
	}
}
